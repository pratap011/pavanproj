{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsimha/Desktop/pavan/src/NewPostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport './newPostPage.css'; // Import custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPostPage = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Perform API POST request to submit the new post\n      // For example, using fetch or Axios\n      // Replace the URL with your actual API endpoint\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          body: description\n        })\n      });\n      if (response.status === 201) {\n        setIsSuccess(true);\n        // Clear form inputs after successful submission\n        setTitle('');\n        setDescription('');\n        // Redirect to localhost:3000/home after successful submission\n        window.location.href = 'http://localhost:3000/';\n      } else {\n        // Handle error cases here\n        setIsSuccess(false);\n      }\n    } catch (error) {\n      console.error('Error submitting new post:', error);\n      setIsSuccess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"Post submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"form-label\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"title\",\n            value: title,\n            onChange: handleTitleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"form-label\",\n            children: \"Description (max 1000 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"description\",\n            rows: \"4\",\n            value: description,\n            onChange: handleDescriptionChange,\n            maxLength: \"1000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPostPage, \"RkQsP9+sWDC4jAuutX6EmgB8+os=\");\n_c = NewPostPage;\nexport default NewPostPage;\nvar _c;\n$RefreshReg$(_c, \"NewPostPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewPostPage","_s","title","setTitle","description","setDescription","isSuccess","setIsSuccess","handleTitleChange","e","target","value","handleDescriptionChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","window","location","href","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","rows","maxLength","_c","$RefreshReg$"],"sources":["/Users/pratapsimha/Desktop/pavan/src/NewPostPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport './newPostPage.css'; // Import custom CSS file\n\nconst NewPostPage = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Perform API POST request to submit the new post\n      // For example, using fetch or Axios\n      // Replace the URL with your actual API endpoint\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title,\n          body: description,\n        }),\n      });\n\n      if (response.status === 201) {\n        setIsSuccess(true);\n        // Clear form inputs after successful submission\n        setTitle('');\n        setDescription('');\n        // Redirect to localhost:3000/home after successful submission\n        window.location.href = 'http://localhost:3000/';\n      } else {\n        // Handle error cases here\n        setIsSuccess(false);\n      }\n    } catch (error) {\n      console.error('Error submitting new post:', error);\n      setIsSuccess(false);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"col-md-6 offset-md-3\"> {/* Decrease width */}\n        <h1 className=\"mb-4\">Create New Post</h1>\n        {isSuccess && <div className=\"alert alert-success\">Post submitted successfully!</div>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"title\" className=\"form-label\">\n              Title <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              value={title}\n              onChange={handleTitleChange}\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label\">\n              Description (max 1000 characters)\n            </label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              rows=\"4\"\n              value={description}\n              onChange={handleDescriptionChange}\n              maxLength=\"1000\"\n            ></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}