{"ast":null,"code":"var _jsxFileName = \"/Users/pratapsimha/Desktop/pavan/src/PostDetailPage.jsx\",\n  _s = $RefreshSig$();\n// PostDetailPage.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetailPage = ({\n  match\n}) => {\n  _s();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const postId = urlString; //Get post ID from URL parameter\n  console.log(\"postId\", postId);\n  const fetchPost = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);\n      const data = await response.json();\n      setPost(data);\n    } catch (error) {\n      console.error('Error fetching post:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPost();\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Post not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetailPage, \"7Uom0wWsbIXsBXcXmZppN88d0CA=\");\n_c = PostDetailPage;\nexport default PostDetailPage;\nvar _c;\n$RefreshReg$(_c, \"PostDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostDetailPage","match","_s","post","setPost","loading","setLoading","postId","urlString","console","log","fetchPost","response","fetch","data","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","body","_c","$RefreshReg$"],"sources":["/Users/pratapsimha/Desktop/pavan/src/PostDetailPage.jsx"],"sourcesContent":["// PostDetailPage.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\nconst PostDetailPage = ({ match }) => {\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const postId = urlString //Get post ID from URL parameter\n  console.log(\"postId\",postId);\n\n  const fetchPost = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);\n      const data = await response.json();\n      setPost(data);\n    } catch (error) {\n      console.error('Error fetching post:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, [postId]);\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Post Details</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : post ? (\n        <div>\n          <h2>{post.title}</h2>\n          <p>{post.body}</p>\n        </div>\n      ) : (\n        <p>Post not found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default PostDetailPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,MAAM,GAAGC,SAAS,EAAC;EACzBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,MAAM,CAAC;EAE5B,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CN,MAAO,EAAC,CAAC;MACpF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCX,OAAO,CAACU,IAAI,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACER,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBjB,OAAO,gBACNN,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfnB,IAAI,gBACNJ,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAKf,IAAI,CAACoB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBvB,OAAA;QAAAmB,QAAA,EAAIf,IAAI,CAACqB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,gBAENvB,OAAA;MAAAmB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvCIF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}